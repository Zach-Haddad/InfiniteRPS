{"version":3,"sources":["webpack:///webpack/bootstrap 86b49e046b0278fe2e86","webpack:///./lib/infinite_rps.js","webpack:///./lib/game.js","webpack:///./lib/unit.js","webpack:///./lib/player.js","webpack:///./lib/enemy.js","webpack:///./lib/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;ACtBD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAqC,UAAU;AAC/C;AACA;;AAEA;;AAEA;AACA;AACA,OAAM;;AAEN;AACA;AACA;;AAEA;AACA,yBAAwB;AACxB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA,uCAAsC,UAAU;AAChD;AACA;;AAEA;AACA;AACA,uCAAsC,KAAK;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;AC9BA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 86b49e046b0278fe2e86","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementById(\"mainCanvas\");\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  // new GameView(game, ctx).start();\n  const rock = new Image();\n  rock.src = \"assets/images/rock.png\";\n\n  rock.addEventListener(\"load\", function() {\n      ctx.drawImage(rock, 750, 280);\n  }, false);\n  // need preloader\n  const view = new GameView(game, ctx);\n  window.view = view;\n  window.view.bindKeys();\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/infinite_rps.js\n// module id = 0\n// module chunks = 0","const Unit = require(\"./unit\");\nconst Player = require(\"./player\");\nconst Enemy = require(\"./enemy\");\n\nclass Game {\n  constructor() {\n    this.level = 1;\n    this.score = 0;\n    this.enemies = [];\n    this.player = new Player();\n    this.levelCompleted = false;\n  }\n\n  populateEnemies(level) {\n    // add number of enemies proportional to current level (maybe 1.1x + 4)\n    // enemy constructor will have randomized type\n  }\n\n  moveObjects(delta){\n\n  }\n\n  drawObjects(){\n\n  }\n\n  removeObject(){\n\n  }\n\n  checkCollisions(){\n\n  }\n\n  step(delta){\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  // game logic; levelCompleted = false\n  // levelCompleted when enemies array length is 0\n  // generate New Level(params)\n}\n\nGame.DIM_X = 800;\nGame.DIM_Y = 500;\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","class Unit {\n  constructor() {\n    this.x = 600;\n    this.y = 200;\n    this.type = '';\n  }\n\n  draw(ctx) {\n    ctx.drawImage(`./assers/images/${this.type}`, this.x, 280);\n  }\n  // fixed y-position!\n\n  // need preloader\n\n  // rock.addEventListener(\"load\", function() {\n  //     ctx.drawImage(rock, 300, 280);\n  // }, false);\n\n  remove() {\n    this.game.remove(this);\n  }\n\n  isCollidedWith(otherObject){\n    // fixed icon width; therefore range is this.x + (150/2)\n  }\n\n}\n\nUnit.TYPES = [\n    \"rock\",\n    \"paper\",\n    \"scissors\"\n];\n// necessary ^^ ????\n\nmodule.exports = Unit;\n\n// Store RPS image sources here\n// Collisions\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/unit.js\n// module id = 2\n// module chunks = 0","const Unit = require(\"./unit\");\n\nclass Player extends Unit {\n  constructor() {\n    super();\n    this.type = \"rock\";\n    this.img_src = `./assets/images/${this.type}.png`;\n    this.health = 3;\n  }\n\n  setType(type) {\n    this.type = type;\n    this.img_src = `./assets/images/${type}.png`;\n  }\n\n  collidedWith(otherObject){\n    // always remove enemy from level\n    // if correct, nothing\n    // if opposite, lose 1 hp\n    // if draw, lose 0.5 hp\n  }\n\n  // keybinding\n  // leftarrow/z 37/90 (ROCK)\n  // downarrow/x 40/88 (PAPER)\n  // rightarrow/c 39/67 (SCISSORS)\n\n\n}\n\nmodule.exports = Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 3\n// module chunks = 0","const Unit = require(\"./unit\");\n\nclass Enemy extends Unit {\n  constructor() {\n    this.type = Unit.TYPES[Math.floor(Math.random() * 3)];\n  }\n\n}\n\nmodule.exports = Enemy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/enemy.js\n// module id = 4\n// module chunks = 0","class GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.player = this.game.player;\n  }\n\n  bindKeys() {\n    const player = this.player;\n    let keyPressed = this.keyPressed;\n\n    addEventListener(\"keydown\", function(e) {\n      switch (e.keyCode) {\n        case 90:\n        case 37:\n        // rock\n          console.log('rock');\n          break;\n        case 88:\n        case 40:\n        // PAPER\n        console.log('paper');\n        break;\n        case 67:\n        case 39:\n        // SCISSORS\n        console.log('scissors');\n        break;\n        default:\n        console.log('something else');\n      }\n    }, false);\n  }\n\n  // consider modifying switch statement above to only allow moves if game NOT over\n\n  animate(time){\n    const timeDelta = time - this.lastTime;\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n\n  start(){\n    this.bindKeys();\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}